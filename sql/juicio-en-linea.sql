-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS core.areas
(
    id integer NOT NULL DEFAULT nextval('core.area_id_seq'::regclass),
    num integer NOT NULL,
    clave character varying COLLATE pg_catalog."default" NOT NULL,
    nombre character varying COLLATE pg_catalog."default",
    estatus boolean DEFAULT true,
    CONSTRAINT area_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.dependencias
(
    id integer NOT NULL DEFAULT nextval('core.dependencia_id_seq'::regclass),
    clave character varying COLLATE pg_catalog."default" NOT NULL,
    nombre character varying COLLATE pg_catalog."default",
    estatus boolean DEFAULT true,
    area_id integer NOT NULL,
    CONSTRAINT dependencia_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.digitalizacion
(
    id serial NOT NULL,
    url_documento character varying(500) COLLATE pg_catalog."default" NOT NULL,
    usuario_creo_id integer NOT NULL,
    fecha_registro timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    usuario_actualizo_id integer NOT NULL,
    fecha_actualizo timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    estatus boolean DEFAULT true,
    numero_fojas integer,
    expediente_id integer,
    tipo_documento_id integer,
    CONSTRAINT digitalizacion_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.estados
(
    id integer NOT NULL DEFAULT nextval('core.estado_id_seq'::regclass),
    num integer NOT NULL,
    clave character varying(10) COLLATE pg_catalog."default" NOT NULL,
    nombre character varying COLLATE pg_catalog."default" NOT NULL,
    estatus boolean DEFAULT true,
    CONSTRAINT estado_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.expedientes
(
    id integer NOT NULL DEFAULT nextval('core.expediente_id_seq'::regclass),
    numero_expediente character varying(25) COLLATE pg_catalog."default" NOT NULL,
    tipo_proceso_id integer NOT NULL,
    usuario_creo_id integer NOT NULL,
    fecha_registro timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    ponencia_id integer NOT NULL,
    usuario_actualizo_id integer NOT NULL,
    fecha_actualizo timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    digitalizado boolean DEFAULT true,
    estatus boolean DEFAULT true,
    descripcion character varying COLLATE pg_catalog."default",
    municipio_id integer,
    dependencia_id integer,
    nombre_actor character varying(50) COLLATE pg_catalog."default",
    apellido_paterno_actor character varying(50) COLLATE pg_catalog."default",
    apellido_materno_actor character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT expediente_pkey PRIMARY KEY (id),
    CONSTRAINT expediente_unique UNIQUE (numero_expediente)
);

CREATE TABLE IF NOT EXISTS core.municipios
(
    id integer NOT NULL DEFAULT nextval('core.municipio_id_seq'::regclass),
    num integer NOT NULL,
    clave character varying COLLATE pg_catalog."default" NOT NULL,
    nombre character varying COLLATE pg_catalog."default",
    estatus boolean DEFAULT true,
    estado_id integer NOT NULL,
    CONSTRAINT municipio_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.oficialias
(
    id integer NOT NULL,
    clave character varying(20) COLLATE pg_catalog."default" NOT NULL,
    descripcion character varying(50) COLLATE pg_catalog."default" NOT NULL,
    cargo_titular character varying(20) COLLATE pg_catalog."default" NOT NULL,
    nombre_titular character varying(100) COLLATE pg_catalog."default" NOT NULL,
    estatus boolean DEFAULT true,
    CONSTRAINT oficialia_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.personas
(
    id integer NOT NULL DEFAULT nextval('core.persona_id_seq'::regclass),
    nombre character varying COLLATE pg_catalog."default" NOT NULL,
    apellido_paterno character varying COLLATE pg_catalog."default",
    apellido_materno character varying COLLATE pg_catalog."default",
    curp character varying(18) COLLATE pg_catalog."default",
    rfc character varying(15) COLLATE pg_catalog."default",
    sexo character varying(1) COLLATE pg_catalog."default",
    email character varying COLLATE pg_catalog."default",
    telefono character varying(15) COLLATE pg_catalog."default",
    calle character varying COLLATE pg_catalog."default",
    cp character varying(5) COLLATE pg_catalog."default",
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    fecha_actualizacion timestamp without time zone,
    celular character varying(15) COLLATE pg_catalog."default",
    estatus boolean DEFAULT true,
    fecha_nacimiento date,
    usuario_creo_id integer,
    usuario_actualizo_id integer,
    CONSTRAINT persona_pkey PRIMARY KEY (id),
    CONSTRAINT persona_unique UNIQUE (nombre, apellido_paterno, apellido_materno, curp, rfc, email)
);

CREATE TABLE IF NOT EXISTS core.ponencias
(
    id integer NOT NULL DEFAULT nextval('core.ponencia_id_seq'::regclass),
    clave character varying(20) COLLATE pg_catalog."default" NOT NULL,
    descripcion character varying(50) COLLATE pg_catalog."default" NOT NULL,
    cargo_titular character varying(20) COLLATE pg_catalog."default" NOT NULL,
    nombre_titular character varying(100) COLLATE pg_catalog."default" NOT NULL,
    estatus boolean DEFAULT true,
    sala_colegiada_id integer,
    cargo_secretario character(20) COLLATE pg_catalog."default",
    nombre_secretario character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT ponencia_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.roles
(
    id integer NOT NULL,
    clave character varying(20) COLLATE pg_catalog."default" NOT NULL,
    descripcion character varying(50) COLLATE pg_catalog."default" NOT NULL,
    estatus boolean DEFAULT true,
    CONSTRAINT rol_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.salas_colegiadas
(
    id integer NOT NULL DEFAULT nextval('core.sala_colegiada_id_seq'::regclass),
    clave character varying(20) COLLATE pg_catalog."default" NOT NULL,
    descripcion character varying(50) COLLATE pg_catalog."default" NOT NULL,
    cargo_titular character varying(20) COLLATE pg_catalog."default" NOT NULL,
    nombre_titular character varying(100) COLLATE pg_catalog."default" NOT NULL,
    estatus boolean DEFAULT true,
    oficialia_id integer,
    CONSTRAINT sala_colegiada_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.tipos_documentos
(
    id integer NOT NULL DEFAULT nextval('core.tipo_documento_id_seq'::regclass),
    clave character varying(20) COLLATE pg_catalog."default" NOT NULL,
    descripcion character varying(50) COLLATE pg_catalog."default" NOT NULL,
    estatus boolean DEFAULT true,
    CONSTRAINT tipo_documento_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.tipos_procesos
(
    id integer NOT NULL DEFAULT nextval('core.tipo_proceso_id_seq'::regclass),
    clave character varying(20) COLLATE pg_catalog."default" NOT NULL,
    descripcion character varying(80) COLLATE pg_catalog."default" NOT NULL,
    estatus boolean DEFAULT true,
    CONSTRAINT tipo_proceso_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS core.usuarios
(
    id integer NOT NULL DEFAULT nextval('core.usuario_id_seq'::regclass),
    numero_expediente character varying(50) COLLATE pg_catalog."default" NOT NULL,
    correo_electronico character varying COLLATE pg_catalog."default" NOT NULL,
    passwd character varying COLLATE pg_catalog."default" NOT NULL,
    fecha_creacion timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    fecha_actualizacion timestamp without time zone,
    last_login timestamp without time zone,
    estatus boolean DEFAULT true,
    usuario_creo_clave character varying(50) COLLATE pg_catalog."default",
    usuario_actualizo_clave character varying(50) COLLATE pg_catalog."default",
    area_adscripcion character varying COLLATE pg_catalog."default",
    cargo character varying COLLATE pg_catalog."default",
    rol_id integer,
    CONSTRAINT usuario_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS core.dependencias
    ADD CONSTRAINT area_dependencia_fkey FOREIGN KEY (area_id)
    REFERENCES core.areas (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS core.digitalizacion
    ADD CONSTRAINT digit_expediente_fkey FOREIGN KEY (expediente_id)
    REFERENCES core.expedientes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS core.digitalizacion
    ADD CONSTRAINT tipodocumento_digitalizacion_fkey FOREIGN KEY (tipo_documento_id)
    REFERENCES core.tipos_documentos (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS core.digitalizacion
    ADD CONSTRAINT usuario_actualizo_fkey FOREIGN KEY (usuario_actualizo_id)
    REFERENCES core.usuarios (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS core.digitalizacion
    ADD CONSTRAINT usuario_creo_fkey FOREIGN KEY (usuario_creo_id)
    REFERENCES core.usuarios (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS core.expedientes
    ADD CONSTRAINT expediente_municipio_fkey FOREIGN KEY (municipio_id)
    REFERENCES core.municipios (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS core.expedientes
    ADD CONSTRAINT expediente_proceso_fkey FOREIGN KEY (tipo_proceso_id)
    REFERENCES core.tipos_procesos (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS core.expedientes
    ADD CONSTRAINT expediente_usuarioactualizo_fkey FOREIGN KEY (usuario_actualizo_id)
    REFERENCES core.usuarios (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS core.expedientes
    ADD CONSTRAINT expediente_usuariocreo_fkey FOREIGN KEY (usuario_creo_id)
    REFERENCES core.usuarios (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS core.municipios
    ADD CONSTRAINT municipios_estados_fkey FOREIGN KEY (estado_id)
    REFERENCES core.estados (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS core.ponencias
    ADD CONSTRAINT ponencias_salas_fkey FOREIGN KEY (sala_colegiada_id)
    REFERENCES core.salas_colegiadas (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS core.usuarios
    ADD CONSTRAINT usuario_rol_fkey FOREIGN KEY (rol_id)
    REFERENCES core.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;